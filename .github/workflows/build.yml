name: Build Flutter E-commerce App

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-android:
    name: 🤖 Build Android
    runs-on: ubuntu-latest

    steps:
      # --- Checkout source ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- Setup Flutter ---
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.3
          channel: stable

      # --- Cache Flutter & Gradle ---
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # --- Dependency setup ---
      - name: Install Flutter dependencies
        run: flutter pub get

      # --- Build Android APK ---
      - name: Build Android APK
        run: flutter build apk --release

      # --- Extract appId from build.gradle ---
      - name: Extract Android appId
        id: get-android-appid
        run: |
          APP_ID=$(grep 'applicationId' android/app/build.gradle | head -n 1 | sed 's/.*"\(.*\)".*/\1/')
          echo "appId=$APP_ID" >> $GITHUB_OUTPUT
        shell: bash

      - name: Print Android App ID
        run: echo "Android App ID is ${{ steps.get-android-appid.outputs.appId }}"

      # --- Upload artifact ---
      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: build/app/outputs/flutter-apk/*.apk

  build-ios:
    name: 🍎 Build iOS
    needs: build-android
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.3
          channel: stable

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Install Flutter dependencies
        run: flutter pub get

      # --- CocoaPods sync fix ---
      - name: Install CocoaPods dependencies
        working-directory: ios
        run: |
          pod repo update
          pod install --verbose

      # --- Extract iOS appId ---
      - name: Extract iOS appId
        id: get-ios-appid
        run: |
          APP_ID=$(/usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" ios/Runner/Info.plist)
          echo "appId=$APP_ID" >> $GITHUB_OUTPUT
          echo "Extracted iOS App ID: $APP_ID"

      # --- Build iOS IPA ---
      - name: Build iOS App
        run: flutter build ios --release --no-codesign

      # --- Print iOS App ID---
      - name: Print iOS App ID
        run: echo "iOS App ID is ${{ steps.get-ios-appid.outputs.appId }}"


      # --- Package IPA ---
      - name: Package IPA
        run: |
          mkdir -p build/ipa
          cd build/ios/iphoneos
          zip -r ../../ipa/ecommerce_app.ipa *.app

      - name: Upload iOS IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios
          path: build/ipa/*.ipa

  maestro-test:
    name: 🧪 Run Maestro Tests
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Android Artifact
        uses: actions/download-artifact@v4
        with:
          name: android
          path: ./builds/android

      - name: Download iOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: ios
          path: ./builds/ios

      # # --- Setup Flutter for integration test environment ---
      # - name: Setup Flutter
      #   uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: 3.24.3
      #     channel: stable

      # # --- Cache Flutter dependencies ---
      # - name: Cache Flutter dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.pub-cache
      #     key: ${{ runner.os }}-maestro-flutter-${{ hashFiles('pubspec.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-maestro-flutter-

      # --- Install Maestro ---
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: Verify Maestro installation
        run:
          maestro --version

      # --- Run Maestro tests for Android & iOS builds ---
      - name: Run Maestro Android Tests
        run: |
          echo "Starting Maestro local test suite..."
          maestro test .maestro/login.yaml --format junit --output report/android_results.xml || true
        env:
          MAESTRO_DRIVER: android
          MAESTRO_APP: artifacts/android/*.apk

      - name: Run Maestro iOS Tests
        run: |
          echo "Starting Maestro local test suite..."
          maestro test .maestro/login.yaml --format junit --output report/ios_results.xml || true
        env:
          MAESTRO_DRIVER: ios
          MAESTRO_APP: artifacts/ios/*.ipa

      # --- Upload test results ---
      - name: Upload Maestro test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: reports/*.xml